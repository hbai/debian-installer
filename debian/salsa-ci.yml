---
variables:
  GIT_DEPTH: 1
  RELEASE: 'unstable'
  SOURCE_DIR: 'source_dir'
  SALSA_CI_IMAGES: 'registry.salsa.debian.org/salsa-ci-team/pipeline'
  SALSA_CI_IMAGES_BASE: ${SALSA_CI_IMAGES}/base:${RELEASE}
  SALSA_CI_IMAGES_BASE_I386: ${SALSA_CI_IMAGES}/i386/base:${RELEASE}
  MINIISO_ADD_DEVEL_REPO: 1
  OQA_JOBSTOCLONE: ""

stages:
  - build
  - bridge

.build-script: &build-script
  - |
    apt-get update && eatmydata apt-get install --no-install-recommends -y \
      fakeroot \
      build-essential \
      curl \
      jq

  - |
    if [ "${B2R_BUILDREPO_JOB_ID}" ] ; then
      printf "# This file was created by the salsa-ci debian-installer job.\ndeb http://deb.debian.org/debian unstable main/debian-installer\n" > build/sources.list.udeb.local
      printf "deb [signed-by=/usr/share/keyrings/B2R_dev_key.gpg] ${CI_SERVER_URL}/${B2R_PROJECT_NAMESPACE}/${B2R_PROJECT_NAME}/-/jobs/${B2R_BUILDREPO_JOB_ID}/artifacts/raw/public unstable main/debian-installer\n" >> build/sources.list.udeb.local
      printf '%s' "$B2R_REPO_KEY" | base64 -d > /usr/share/keyrings/B2R_dev_key.gpg
      ls -ltr /usr/share/keyrings
    fi

  # Install package build dependencies
  - eatmydata apt-get build-dep --no-install-recommends -y .

  # If not disabled, bump package version
  - |
    if ! echo "$SALSA_CI_DISABLE_VERSION_BUMP" | grep -qE '^(1|yes|true)$'; then
      sed -i -e '1 s/)/+salsaci)/' debian/changelog
    fi

  # Create salsaci user and fix permissions
  - useradd salsaci
  - chown -R salsaci. build

  # Build miniiso as user salsaci
  - |
    set -x
    cd build
    PREESEED_OPT=
    if [ "1" = "$MINIISO_ADD_DEVEL_REPO" ]; then
        PRESEED_FILE=${CI_PROJECT_DIR}/devel_repo_preseed.cfg
        printf "d-i apt-setup/_DEVEL_/comment string %s\n" "NOT FOR PRODUCTION USE! (preseed: apt-setup/_DEVEL_/...)" > $PRESEED_FILE
        printf "d-i apt-setup/_DEVEL_/repository string %s\n" "${CI_SERVER_URL}/${B2R_PROJECT_NAMESPACE}/${B2R_PROJECT_NAME}/-/jobs/${B2R_BUILDREPO_JOB_ID}/artifacts/raw/public/ unstable main" >> $PRESEED_FILE
        printf "d-i apt-setup/_DEVEL_/key string %s\n" "base64://$B2R_REPO_KEY" >> $PRESEED_FILE
        PRESEED_OPT="PRESEED='$PRESEED_FILE'"
    fi
    AVAIL_ABI=$(apt-cache show linux-headers-amd64 | sed -ne 's/Depends: linux-headers-\([0-9.-]*\)-amd64.*$/\1/p')
    SET_ABI=$(sed -ne 's/^LINUX_KERNEL_ABI\s*?=\s*\([0-9.-]*\)\s*$/\1/p' config/common)
    [ "$AVAIL_ABI" = "$SET_ABI" ] || printf "WARNING: using available ABI (%s) instead of the one set in the source (%s)\n"  "$AVAIL_ABI" "$SET_ABI"
    su salsaci -c "eatmydata fakeroot make LINUX_KERNEL_ABI='$AVAIL_ABI' $PRESEED_OPT build_netboot-gtk"
    head sources.list.udeb* /etc/apt/sources.list || true
    echo "CI_PROJECT_DIR = $CI_PROJECT_DIR"
    mkdir ${CI_PROJECT_DIR}/public
    ln dest/netboot/gtk/mini.iso ${CI_PROJECT_DIR}/public/gtk-mini.iso
    echo "ISO URL: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/raw/public/gtk-mini.iso"

  - cd ${CI_PROJECT_DIR}

  - find ${CI_PROJECT_DIR} -name gtk-mini.iso

  - echo "MINIISO_JOB_URL=$CI_JOB_URL" >> ${CI_PROJECT_DIR}/miniiso.env

.build-definition: &build-definition
  stage: build
  image: $SALSA_CI_IMAGES_BASE
  script:
       - export
       - *build-script

.build-package: &build-package
  extends:
    - .build-definition
    #- .artifacts-default-expire
  except:
    variables:
      - $CI_COMMIT_TAG != null && $SALSA_CI_ENABLE_PIPELINE_ON_TAGS !~ /^(1|yes|true)$/
  artifacts:
    reports:
      dotenv: miniiso.env

miniiso:
  extends:
    - .build-package
  artifacts:
    paths:
      - public

openqa-link:
  stage: bridge
  variables:
    OQA_ISO_URL: '$MINIISO_JOB_URL/artifacts/raw/public/gtk-mini.iso'
    OQA_ISO: 'salsa-$CI_PIPELINE_ID-gtk-mini.iso'
    OQA_BUILD: '-salsa-$CI_PIPELINE_ID:$CI_PROJECT_NAMESPACE:$CI_PROJECT_NAME:$CI_BUILD_REF_NAME'
    OQA_CI_PIPELINE_URL: '$CI_SERVER_URL/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/-/pipelines/$CI_PIPELINE_ID'
    OQA_SALSA_RESULT_LINK: "$CI_API_V4_URL/projects/$CI_PROJECT_ID/statuses/$CI_BUILD_REF?pipeline_id=$CI_PIPELINE_ID&name=openqa&target_url=:target_url&state=:state"
    CLONE_NAME_SUFFIX: '$B2R_PROJECT_NAMESPACE-$B2R_BUILD_REF_SLUG'
    OQA_JOBSTOCLONE: $OQA_JOBSTOCLONE
  rules:
    - if: $B2R_TRIG_PIPELINE_ID
      variables:
        OQA_ISO: 'salsa-$B2R_TRIG_PIPELINE_ID-gtk-mini.iso'
        OQA_BUILD: '-salsa-$B2R_TRIG_PIPELINE_ID:$B2R_TRIG_PROJECT_NAMESPACE:$B2R_TRIG_PROJECT_NAME:$B2R_TRIG_BUILD_REF_NAME'
        OQA_CI_PIPELINE_URL: '$CI_SERVER_URL/$B2R_TRIG_PROJECT_NAMESPACE/$B2R_TRIG_PROJECT_NAME/-/pipelines/$B2R_TRIG_PIPELINE_ID'
    - if: $OQA_JOBSTOCLONE
    - when: manual
    # FIXME -- should instead make the test name useful, so we do test d-i updates
    # probably setting variables in one of these conditionals would help?
  needs:
    - miniiso
  trigger:
    project: philh/openqa-link
    #branch: main
